======================
7-base_geometry tests
======================
Module raises an exception and validates values

==========
No output
==========

value is int
::
  >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()
      >>> bg.integer_validator("value", 7)

==================
Exceptions Raised
==================

Raises Exception when .area() is run
::
  >>> bg.area()
    Traceback (most recent call last):
      ...
        Exception: area() is not implemented

Raises TypeError when value is not an int
::
  >>> bg.integer_validator("str", "one")
    Traceback (most recent call last):
      ...
        TypeError: str must be an integer

  >>> bg.integer_validator("float", 4.5)
    Traceback (most recent call last):
      ...
        TypeError: float must be an integer

  >>> bg.integer_validator("neg_float", -4.7)
    Traceback (most recent call last):
      ...
        TypeError: neg_float must be an integer

  >>> bg.integer_validator("test", True)
    Traceback (most recent call last):
      ...
        TypeError: test must be an integer

  >>> bg.integer_validator("list", [1, 2, 3])
    Traceback (most recent call last):
      ...
        TypeError: list must be an integer

  >>> bg.integer_validator("tuple", (1, 2, 3))
    Traceback (most recent call last):
      ...
        TypeError: tuple must be an integer

  >>> bg.integer_validator("empty", None)
    Traceback (most recent call last):
      ...
        TypeError: empty must be an integer

  >>> bg.integer_validator("set", {1, 2, 3})
    Traceback (most recent call last):
      ...
        TypeError: set must be an integer

  >>> bg.integer_validator("dict", {'one': 1, 'two': 2, 'three': 3})
    Traceback (most recent call last):
      ...
        TypeError: dict must be an integer

  >>> bg.integer_validator("type", int)
    Traceback (most recent call last):
      ...
        TypeError: type must be an integer

Raises ValueError when value is an int but is <= 0
::
  >>> bg.integer_validator("value", -5)
    Traceback (most recent call last):
      ...
        ValueError: value must be greater than 0

  >>> bg.integer_validator("value", 0)
    Traceback (most recent call last):
      ...
        ValueError: value must be greater than 0

Wrong number of arguments
::
  >>> bg.integer_validator("name")
    Traceback (most recent call last):
      ...
        TypeError: integer_validator() missing 1 required positional argument: 'value'

  >>> bg.integer_validator()
    Traceback (most recent call last):
      ...
        TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
